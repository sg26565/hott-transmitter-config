import kotlin.String

/**
 * Generated by [gradle-kotlin-dsl-libs](https://github.com/jmfayard/gradle-kotlin-dsl-libs)
 *
 * Run again
 *   `$ ./gradlew syncLibs`
 * to update this file */
object Libs {
    /**
     * [aws-java-sdk-polly website](https://aws.amazon.com/sdkforjava) */
    const val aws_java_sdk_polly: String =
            "com.amazonaws:aws-java-sdk-polly:" + Versions.aws_java_sdk_polly

    const val com_diffplug_gradle_eclipse_mavencentral_gradle_plugin: String =
            "com.diffplug.gradle.eclipse.mavencentral:com.diffplug.gradle.eclipse.mavencentral.gradle.plugin:" + Versions.com_diffplug_gradle_eclipse_mavencentral_gradle_plugin

    /**
     * [jackson-databind website](http://github.com/FasterXML/jackson) */
    const val jackson_databind: String =
            "com.fasterxml.jackson.core:jackson-databind:" + Versions.jackson_databind

    /**
     * [jSerialComm website](http://fazecast.github.io/jSerialComm/) */
    const val jserialcomm: String = "com.fazecast:jSerialComm:" + Versions.jserialcomm

    const val com_github_johnrengelman_shadow_gradle_plugin: String =
            "com.github.johnrengelman.shadow:com.github.johnrengelman.shadow.gradle.plugin:" + Versions.com_github_johnrengelman_shadow_gradle_plugin

    const val com_google_osdetector_gradle_plugin: String =
            "com.google.osdetector:com.google.osdetector.gradle.plugin:" + Versions.com_google_osdetector_gradle_plugin

    /**
     * [mp3spi website](https://code.google.com/p/soundlibs/) */
    const val mp3spi: String = "com.googlecode.soundlibs:mp3spi:" + Versions.mp3spi

    /**
     * [vorbisspi website](https://code.google.com/p/soundlibs/) */
    const val vorbisspi: String = "com.googlecode.soundlibs:vorbisspi:" + Versions.vorbisspi

    /**
     * [commons-io website](http://commons.apache.org/proper/commons-io/) */
    const val commons_io: String = "commons-io:commons-io:" + Versions.commons_io

    /**
     * [jaxb-api website](https://github.com/javaee/jaxb-spec) */
    const val jaxb_api: String = "javax.xml.bind:jaxb-api:" + Versions.jaxb_api

    const val jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin: String =
            "jmfayard.github.io.gradle-kotlin-dsl-libs:jmfayard.github.io.gradle-kotlin-dsl-libs.gradle.plugin:" + Versions.jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin

    /**
     * [junit website](http://junit.org) */
    const val junit: String = "junit:junit:" + Versions.junit

    /**
     * [tornadofx website](https://github.com/edvin/tornadofx) */
    const val tornadofx: String = "no.tornado:tornadofx:" + Versions.tornadofx

    /**
     * [commons-lang3 website](http://commons.apache.org/proper/commons-lang/) */
    const val commons_lang3: String = "org.apache.commons:commons-lang3:" + Versions.commons_lang3

    /**
     * [commons-math3 website](http://commons.apache.org/proper/commons-math/) */
    const val commons_math3: String = "org.apache.commons:commons-math3:" + Versions.commons_math3

    /**
     * [fluent-hc website](http://hc.apache.org/httpcomponents-client) */
    const val fluent_hc: String = "org.apache.httpcomponents:fluent-hc:" + Versions.fluent_hc

    /**
     * [org.eclipse.swt website](http://www.eclipse.org/platform) */
    const val org_eclipse_swt: String =
            "org.eclipse.platform:org.eclipse.swt:" + Versions.org_eclipse_swt

    /**
     * [freemarker website](https://freemarker.apache.org/) */
    const val freemarker: String = "org.freemarker:freemarker:" + Versions.freemarker

    /**
     * [jaxb-runtime website](http://jaxb.java.net) */
    const val jaxb_runtime: String = "org.glassfish.jaxb:jaxb-runtime:" + Versions.jaxb_runtime

    const val org_jetbrains_kotlin_jvm_gradle_plugin: String =
            "org.jetbrains.kotlin.jvm:org.jetbrains.kotlin.jvm.gradle.plugin:" + Versions.org_jetbrains_kotlin_jvm_gradle_plugin

    /**
     * [kotlin-scripting-compiler-embeddable website](https://kotlinlang.org/) */
    const val kotlin_scripting_compiler_embeddable: String =
            "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:" + Versions.org_jetbrains_kotlin

    /**
     * [kotlin-stdlib-jdk8 website](https://kotlinlang.org/) */
    const val kotlin_stdlib_jdk8: String =
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8:" + Versions.org_jetbrains_kotlin

    /**
     * [kotlin-test-junit website](https://kotlinlang.org/) */
    const val kotlin_test_junit: String =
            "org.jetbrains.kotlin:kotlin-test-junit:" + Versions.org_jetbrains_kotlin

    /**
     * [javafx-base website](https://openjdk.java.net/projects/openjfx/) */
    const val javafx_base: String = "org.openjfx:javafx-base:" + Versions.org_openjfx

    /**
     * [javafx-controls website](https://openjdk.java.net/projects/openjfx/) */
    const val javafx_controls: String = "org.openjfx:javafx-controls:" + Versions.org_openjfx

    /**
     * [javafx-graphics website](https://openjdk.java.net/projects/openjfx/) */
    const val javafx_graphics: String = "org.openjfx:javafx-graphics:" + Versions.org_openjfx

    /**
     * [javafx-swing website](https://openjdk.java.net/projects/openjfx/) */
    const val javafx_swing: String = "org.openjfx:javafx-swing:" + Versions.org_openjfx

    /**
     * [javafx-web website](https://openjdk.java.net/projects/openjfx/) */
    const val javafx_web: String = "org.openjfx:javafx-web:" + Versions.org_openjfx

    /**
     * [jssc website](http://jssc.scream3r.org) */
    const val jssc: String = "org.scream3r:jssc:" + Versions.jssc

    /**
     * [flying-saucer-pdf-itext5 website](http://code.google.com/p/flying-saucer/) */
    const val flying_saucer_pdf_itext5: String =
            "org.xhtmlrenderer:flying-saucer-pdf-itext5:" + Versions.flying_saucer_pdf_itext5
}
